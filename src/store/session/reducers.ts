import { SessionsState, SessionReduxActionTypes, SessionReduxActions } from "./types";
import { autoGenerateData, ISession } from "../../seed/data";
import { DataTypes } from "../../seed/dataTypes";
import { reduxSwitchcase } from "../../core/utils/validation-helpers";

const defaultSessionsState: SessionsState = {
	sessions: autoGenerateData(DataTypes.Session, 10)
}

type SessionsCaseMap = {
	[key in SessionReduxActionTypes]: SessionsState;
}

function sessionCases(state: SessionsState, action: SessionReduxActions) {
	const cases: SessionsCaseMap = {
		[SessionReduxActionTypes.CREATE_SESSION]: Object.assign({}, state, { sessions: [ ...state.sessions, action.payload as ISession ] }),
		[SessionReduxActionTypes.DELETE_SESSION]: Object.assign({}, state, { sessions: state.sessions.filter((session: ISession) => session.id !== action.payload) }),
	}
	return cases;
}

export function sessionsReducer(
	state: SessionsState = defaultSessionsState,
	action: SessionReduxActions
): SessionsState {
	return reduxSwitchcase(sessionCases(state, action))(state)(action.type);
}
