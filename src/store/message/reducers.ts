import { MessagesState, MessageReduxActionTypes, MessageReduxActions } from "./types";
import { autoGenerateData, IMessage } from "../../seed/data";
import { DataTypes } from "../../seed/dataTypes";
import { reduxSwitchcase } from "../../core/utils/validation-helpers";

const defaultMessagesState: MessagesState = {
	messages: autoGenerateData(DataTypes.Messasge, 10)
}

type MessagesCaseMap = {
	[key in MessageReduxActionTypes]: MessagesState;
}

function messageCases(state: MessagesState, action: MessageReduxActions) {
	const cases: MessagesCaseMap = {
		[MessageReduxActionTypes.CREATE_MESSAGE]: Object.assign({}, state, { messages: [ ...state.messages, action.payload as IMessage ] }),
		[MessageReduxActionTypes.DELETE_MESSAGE]: Object.assign({}, state, { messages: state.messages.filter((message: IMessage) => message.id !== action.payload) }),
	}
	return cases;
}

export function messagesReducer(
	state: MessagesState = defaultMessagesState,
	action: MessageReduxActions
): MessagesState {
	return reduxSwitchcase(messageCases(state, action))(state)(action.type);
}
